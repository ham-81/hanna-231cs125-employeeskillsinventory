@using Employee_Skill_Inventory.Data
@page "/"
@page "/listemployees"
@inject IEmployeeService EmployeeService
@inject IJSRuntime js
@layout MainLayout

<h2>Employee Details</h2>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <SfPivotView TValue="Employee" ShowFieldList="true" AllowCalculatedField="true" ShowGroupingBar="true" Height="300" View="View.Chart">
                <PivotViewDataSourceSettings DataSource="@employees">
                    <PivotViewRows>
                        <PivotViewRow Name="Skill"></PivotViewRow>
                    </PivotViewRows>
                    <PivotViewValues>
                        <PivotViewValue Name="EmployeeName" Caption="Name" Type="SummaryTypes.Count"></PivotViewValue>
                    </PivotViewValues>
                </PivotViewDataSourceSettings>
                <PivotViewDisplayOption View="View.Both"></PivotViewDisplayOption>
                <PivotChartSettings>
                    <PivotChartSeries Type="ChartSeriesType.Pie" LegendShape="PivotChartLegendShape.Circle">
                    </PivotChartSeries>
                    <PivotChartLegendSettings Position="PivotChartLegendPosition.Top" Background="rgb(230,236,239)" Alignment="PivotChartAlignment.Center">
                    </PivotChartLegendSettings>
                </PivotChartSettings>
            </SfPivotView>
        </div>
    </div>
</div>

@if (employees == null)
{
    <img src="./basicloader.gif" />
}
else
{
    <p>
        <a href="/addemployee">Create New Employee</a>
    </p>
    <table class='table'>
        <thead>
            <tr>
                <th>Name</th>
                <th>Skill</th>
                <th>Skill Level</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.EmployeeName</td>
                    <td>@employee.Skill</td>
                    <td>@employee.SkillLevel</td>
                    <td>@employee.LastUpdated</td>
                    <td>
                        <a href='/editemployee/@employee.EmployeeId'>Edit</a>
                        <a href='/deleteemployee/@employee.EmployeeId'>Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public List<Employee> employees;
    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployees();
    }
}
